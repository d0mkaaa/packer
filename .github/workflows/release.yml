name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v0.2.1)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Create Release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: packer-linux-x86_64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: packer-linux-aarch64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88
        targets: ${{ matrix.target }}
        
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release binary
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          export CC=aarch64-linux-gnu-gcc
          export CXX=aarch64-linux-gnu-g++
        fi
        cargo build --release --target ${{ matrix.target }} --verbose
      env:
        CARGO_NET_GIT_FETCH_WITH_CLI: true
        
    - name: Prepare binary
      run: |
        mkdir -p artifacts
        cp target/${{ matrix.target }}/release/packer artifacts/
        cd artifacts && tar -czf ${{ matrix.name }}.tar.gz packer
        
    - name: Generate release notes
      id: generate_notes
      run: |
        TAG="${{ steps.get_tag.outputs.TAG }}"
        # extract changelog section for this version
        if [ -f CHANGELOG.md ]; then
          awk "/^## \[${TAG#v}\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          # if empty, use a default message
          if [ ! -s release_notes.md ]; then
            echo "Release $TAG" > release_notes.md
            echo "" >> release_notes.md
            echo "See [CHANGELOG.md](CHANGELOG.md) for details." >> release_notes.md
          fi
        else
          echo "Release $TAG" > release_notes.md
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.TAG }}
        name: Packer ${{ steps.get_tag.outputs.TAG }}
        body_path: release_notes.md
        files: artifacts/${{ matrix.name }}.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}