name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -W clippy::all -A unused_assignments -A dead_code -A clippy::derivable_impls -A clippy::manual_strip -A clippy::large_enum_variant -A clippy::too_many_arguments -A clippy::ptr_arg -A clippy::useless_format -A clippy::manual_clamp -A clippy::single_match -A clippy::manual_flatten -A clippy::manual_map -A clippy::collapsible_match -A clippy::unused_enumerate_index -A clippy::needless_borrows_for_generic_args -A clippy::redundant_guards -A clippy::trim_split_whitespace -A clippy::filter_next -A clippy::needless_return -A clippy::uninlined_format_args -A clippy::result_large_err -A clippy::type_complexity -A clippy::unnecessary_map_or -A clippy::single_component_path_imports -A clippy::print_literal -A clippy::format_in_format_args -A clippy::redundant_field_names -A clippy::new_without_default -A clippy::redundant_closure -A clippy::needless_borrow -A clippy::vec_init_then_push -A clippy::let_and_return -A clippy::for_kv_map -A clippy::only_used_in_recursion
      
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release
      run: cargo build --release --verbose
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: packer-linux
        path: target/release/packer

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88
        
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit --ignore RUSTSEC-2023-0071

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88
        components: llvm-tools-preview
        
    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov
      
    - name: Generate coverage
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: lcov.info
        fail_ci_if_error: true
        verbose: true